{"version":3,"sources":["canvass.ts","components/Label.tsx","components/KeyValue.tsx","components/TextBlock.tsx","components/Action.tsx","components/GalleryItem.tsx","components/Gallery.tsx","components/Navbar.tsx","components/Button.tsx","components/Selector.tsx","components/Map.tsx","components/Toggles.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["CanvassType","Area","getArea","a","taipeiKeelung","taoyuanHsinchuMiaoli","taichungChanghuaNantou","yunlinChiayiTainan","kaohsiungPingtung","yilanHualienTaitung","outlyingIslands","Canvass","rawItem","Object","classCallCheck","this","lat","undefined","long","latLong","split","length","NaN","Number","notes","area","raw","none","findArea","date","name","contactInfo","volunteersNeeded","startTime","endTime","types","Array","push","indexOf","spreadFlyers","dialogue","labor","streetRoaming","stall","canvassTypes","location","flyers","line","phone","lng","t","typesString","i","getType","query","forQuery","JSON","stringify","getTypes","Label","text","props","cn","react_default","createElement","className","Component","KeyValue","_this$props","k","v","TextBlock","italic","Action","link","buttonText","type","contact","title","concat","lib_default","onCopy","alert","href","rel","target","GalleryItem","shift","labels","distance","components_Label","key","toFixed","components_KeyValue","components_TextBlock","components_Action","Gallery","shifts","map","index","distanceTo","from","point","to","units","components_GalleryItem","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","ButtonType","Selector","onChange","value","disabled","defaultTitle","options","option","Button","primary","secondary","onClick","Map","_this","possibleConstructorReturn","getPrototypeOf","call","rootEl","React","createRef","google","maps","current","center","zoom","forEach","_ref","position","LatLng","marker","Marker","infoWindow","InfoWindow","content","addListener","open","ref","Toggles","displayOptions","opt","labelClasses","selected","toString","App","handleAreaChange","e","newArea","setState","handleQueryUpdate","handleDateUpdate","newDate","handleViewChange","newView","view","isOnThisDate","c","state","moment","locale","canvassDate","substring","isSame","handleLocationRequest","loadingLocation","navigator","geolocation","getCurrentPosition","applyCurrentLocation","sort","b","coords","latitude","longitude","aPos","bPos","orderByDistance","areaFilter","containsQuery","_this2","_this$state","filter","build_default","width","components_Button","es","minDate","maxDate","showDisabledMonthNavigation","placeholderText","Selector_Selector","defaultValue","ids","getAreas","aria-describedby","placeholder","components_Toggles","components_Gallery","components_Map","Boolean","window","hostname","match","GetSheetDone","labeledCols","then","sheet","data","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96be4b19.chunk.js","sourcesContent":["export enum CanvassType {\n    spreadFlyers,\n    dialogue,\n    labor,\n    streetRoaming,\n    stall,\n    none\n}\n\nfunction canvassTypes(raw: string): Array<CanvassType> {\n    \n    var types:Array<CanvassType> = Array<CanvassType>();\n    if(raw===null) {\n        types.push(CanvassType.none)\n    } else {\n        if(raw.indexOf(\"發文宣\") != -1) types.push(CanvassType.spreadFlyers);\n        if(raw.indexOf(\"對話（\") != -1) types.push(CanvassType.dialogue);\n        if(raw.indexOf(\"代工\") != -1) types.push(CanvassType.labor);\n        if(raw.indexOf(\"掃街\") != -1) types.push(CanvassType.streetRoaming);\n        if(raw.indexOf(\"擺攤\") != -1) types.push(CanvassType.stall);\n    }\n    return types;\n}\n\nexport enum Area {\n    taipeiKeelung=1,\n    taoyuanHsinchuMiaoli,\n    taichungChanghuaNantou,\n    yunlinChiayiTainan,\n    kaohsiungPingtung,\n    yilanHualienTaitung,\n    outlyingIslands,\n    none\n}\n\nexport function findArea(raw: string): Area {\n    if(raw===null) return Area.none;\n    switch(raw) {\n        case \"北北基\": return Area.taipeiKeelung;\n        case \"桃竹苗\": return Area.taoyuanHsinchuMiaoli;\n        case \"中彰投\": return Area.taichungChanghuaNantou;\n        case \"雲嘉南\": return Area.yunlinChiayiTainan;\n        case \"高屏\": return Area.kaohsiungPingtung;\n        case \"宜花東\": return Area.yilanHualienTaitung;\n        case \"離島外海\": return Area.outlyingIslands;\n        default: return Area.none;\n    }\n}\n\nexport function getArea(a: Area): String {\n    switch(a) {\n        case Area.taipeiKeelung: return \"北北基\";\n        case Area.taoyuanHsinchuMiaoli: return \"桃竹苗\";\n        case Area.taichungChanghuaNantou: return \"中彰投\";\n        case Area.yunlinChiayiTainan: return \"雲嘉南\";\n        case Area.kaohsiungPingtung: return \"高屏\";\n        case Area.yilanHualienTaitung: return \"宜花東\";\n        case Area.outlyingIslands: return \"離島外海\";\n        default: return \"無\";\n    }\n}\n\nexport function getAreas(): Array<String> {\n    let ids: Array<Area> = [];\n    for (const area in Area){\n      if (Number(area)) {\n        ids.push(Number(area));\n      }\n    }\n    return ids.map(getArea);\n}\n\nexport default class Canvass {\n    public notes: string;\n    public area: Area;\n    public name: string;\n    public contactInfo: string;\n    public volunteersNeeded: number;\n    public startTime: string;\n    public endTime: string;\n    public date: string;\n    public types: Array<CanvassType>;\n    public location: string;\n    public flyers: number;\n    public line: string;\n    public phone: string;\n    public lat?: number;\n    public lng?: number;\n    public distance?: number;\n\n    constructor(\n        rawItem: any\n        ) {\n            // Check if has valid latitude or longitude. \n            let hasLatLong = false;\n            let lat = undefined;\n            let long = undefined;\n            if(\"經緯度\" in rawItem) {\n                const latLong = rawItem[\"經緯度\"].split(\", \");\n                if(latLong.length == 2) {\n                    const areNumbers = Number(latLong[0])!==NaN && Number(latLong[1])!==NaN;\n                    if(areNumbers) {\n                        lat = Number(latLong[0]);\n                        long = Number(latLong[1]);\n                    }\n                }\n            }\n            this.notes            = rawItem[\"備註\"] ? rawItem[\"備註\"] : \"\";\n            this.area             = findArea(rawItem[\"區域\"]);\n            this.date             = rawItem[\"開團日期\"];\n            this.name             = rawItem[\"團長名稱\"];\n            this.contactInfo      = rawItem[\"團長聯絡方式\"];\n            this.volunteersNeeded = rawItem[\"希望志工人數\"];\n            this.startTime        = rawItem[\"開始時間\"];\n            this.endTime          = rawItem[\"結束時間\"];\n            this.types            = canvassTypes(rawItem[\"開團形式\"]);\n            this.location         = rawItem[\"地點\"];\n            this.flyers           = rawItem[\"預計發出文宣份數\"];\n            this.line             = rawItem[\"Line\"] ? rawItem[\"Line\"] : \"\";\n            this.phone            = rawItem[\"電話\"] ? rawItem[\"電話\"] : \"\";\n            this.lat              = lat;\n            this.lng              = long;\n        }\n    getType(t: CanvassType): string {\n        switch(t) {\n            case CanvassType.spreadFlyers: return \"發文宣\";\n            case CanvassType.dialogue: return \"對話\";\n            case CanvassType.labor: return \"代工\";\n            case CanvassType.streetRoaming: return \"掃街\";\n            case CanvassType.stall: return \"擺攤\";\n            default: return \"無\";\n        }\n    }\n    getTypes(): string {\n        var typesString = \"\";\n        for (var i = 0; i < this.types.length; i++) {\n            typesString += this.getType(this.types[i])\n        }\n        return typesString\n    }\n    containsQuery(query: string): boolean {\n        return this.forQuery().indexOf(query) != -1;\n    }\n    forQuery(): string {\n        return JSON.stringify(this) + getArea(this.area) + this.getTypes();\n    }\n}","import React, { Component } from 'react';\n\nexport interface Props {\n    text: string\n}\n\nclass Label extends Component<Props> {\n    render() {\n        const { text } = this.props\n        var cn = \"label\"\n        switch(text) {\n            case \"發文宣\":\n                cn += \" label--neutral\"\n                break;\n            case \"對話\":\n                cn += \" label--prominent\"\n                break;\n            case \"代工\":\n                cn += \" label--muted\"\n                break;\n            case \"掃街\":\n                cn += \" label--chill\"\n                break;\n            case \"擺攤\":\n                cn += \" label--warm\"\n            break;\n\n            default:\n                cn += \" label--distance\"\n            break;\n        }\n        return (\n            <div className={cn}>\n                {text}\n            </div>\n        )\n    }\n}\n\nexport default Label","import React, { Component } from 'react';\n\nexport interface Props {\n    k: string;\n    v: string;\n}\n\nclass KeyValue extends Component<Props> {\n    render() {\n        const { k, v } = this.props\n        return (\n            <div className=\"stat\">\n                <label className=\"stat__label\">{k}</label>\n                <span className=\"stat__figure\">{v}</span>\n            </div>\n        )\n    }\n}\n\nexport default KeyValue","import React, { Component } from 'react';\n\nexport interface Props {\n    text: string\n    italic?: boolean\n}\n\nclass TextBlock extends Component<Props> {\n    render() {\n        const { text } = this.props\n\n        return (\n            <p className={\"gallery__item__text-block grow\" + (this.props.italic ? \" italic\" : \"\")} >\n                {text}\n            </p>\n        )\n    }\n}\n\nexport default TextBlock","import React, { Component } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\n\nexport interface Props {\n    type: string\n    contact: string\n}\n\nclass Action extends Component<Props> {\n    render() {\n        const { type, contact } = this.props\n        var cn = \"btn\"\n        var link\n        var buttonText\n        var title = \"\"\n\n        switch(type) {\n            case \"line\":\n                cn += \" btn--line\"\n                link = `line://ti/p/@${contact}`\n                title = `${contact}`\n                buttonText = `Line`\n                break;\n            case \"phone\":\n                cn += \" btn--phone\"\n                buttonText = `打電話`\n                title = `${contact}`\n                link = `tel://${contact}`\n                break;\n            case \"location\":\n                cn += \" btn--primary\"\n                buttonText = `大略位置`\n                title = 'Google 地圖'\n                link = `https://www.google.com/maps/search/?api=1&query=${contact}`\n            default:\n            break;\n        }\n        if (type == \"line\") {\n            return (\n                <CopyToClipboard text={`@${contact}`}\n                onCopy={() => alert(`已將 LineID @${contact} 複製。`)}>\n                <button className={cn} title={title}>{buttonText}</button>\n                </CopyToClipboard>\n            )\n        } else {\n            return (\n                <a className={cn} title={title} href={link} rel=\"noopener noreferrer\" target=\"_blank\">\n                    {buttonText}\n                </a>    \n            )\n        }\n    }\n}\n\nexport default Action","import React, { Component } from 'react';\nimport Canvass, { CanvassType } from '../canvass';\nimport Label from './Label';\nimport KeyValue from './KeyValue';\nimport TextBlock from './TextBlock';\nimport Action from './Action';\nimport { distance } from '@turf/distance';\n\nexport interface Props {\n    shift: Canvass\n    distance?: number\n}\n\nclass GalleryItem extends Component<Props> {\n    render() {\n        const { shift, distance } = this.props;\n        var labels = [];\n        for (var i = 0; i < shift.types.length; i++) {\n            labels.push(<Label key={i} text={shift.getType(shift.types[i])} />)\n        }\n        return (\n            <div className=\"gallery__item\">\n                { (shift.types.length > 0 && shift.types[0] !== CanvassType.none || shift.distance != 9999) &&\n                    <div className=\"gallery__item__labels-container\">\n                    {labels}\n                    {shift.distance && shift.distance != 9999 && \n                        <Label key={-1} text={`約距 ${shift.distance.toFixed(2)} 公里`} />\n                    }\n                    </div>\n                }\n                <h2 className=\"gallery__item__header\">\n                    {shift.location}\n                </h2>\n                <h3 className=\"gallery__item__subheader\">\n                    {`${shift.date} ${shift.startTime} ~ ${shift.endTime}`}\n                </h3>\n                <div className={\"gallery__item__stats-container\" + (shift.notes ? \"\" : \" grow\")}>\n                    { shift.volunteersNeeded !== null &&\n                        <KeyValue k=\"希望志工人數\" v={`${shift.volunteersNeeded}`} />\n                    }\n                    { shift.flyers !== null &&\n                        <KeyValue k=\"預計發出文宣份數\" v={`${shift.flyers}`} />\n                    }\n                </div>\n                { shift.notes && \n                    <TextBlock text={shift.notes} />\n                }\n                <div className=\"gallery__item__contact-container\">\n                    { shift.name && \n                        <KeyValue k=\"團長\" v={shift.name} />\n                    }\n                    {shift.contactInfo &&\n                        <KeyValue k=\"聯絡方式\" v={shift.contactInfo} />\n                    }\n                    <div className=\"gallery__item__contact-container__actions-container\">\n                        { shift.line !== \"\" &&\n                            <Action contact={shift.line} type=\"line\" />\n                        }\n                        { shift.phone !== \"\" &&\n                            <Action contact={shift.phone} type=\"phone\" />\n                        }\n                        {(shift.lat && shift.lng) && \n                            <Action contact={`${shift.lat},${shift.lng}`} type=\"location\" />\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default GalleryItem","import React, { Component } from 'react';\nimport GalleryItem from './GalleryItem';\nimport Canvass from '../canvass';\nimport distance from '@turf/distance';\nimport {point} from '@turf/helpers';\n\nexport interface Props {\n    shifts: Array<Canvass>\n    lat?: number\n    lng?: number\n}\n\nexport type Unit = \"miles\" | \"nauticalmiles\" | \"degrees\" | \"radians\" | \"inches\" | \"yards\" | \"meters\" | \"metres\" | \"kilometers\" | \"kilometres\" | undefined;\n\nclass Gallery extends Component<Props> {\n    render() {\n        const { shifts, lat, lng } = this.props\n\n        return (\n            <div className=\"gallery container\">\n                {shifts.map((shift, index) => \n                    {            \n                        var distanceTo = undefined\n\n                        if (shift.lat && shift.lng && lat && lng) {\n                            var from = point([lat, lng])\n                            var to = point([shift.lat, shift.lng])\n                            var options = { units: 'kilometres' as Unit }\n                            \n                            distanceTo = distance(from, to, options)\n                        }\n                        \n                        return <GalleryItem key={index} shift={shift} distance={distanceTo} />})}\n            </div>\n        )\n    }\n}\n\nexport default Gallery","import React, { Component } from 'react';\n\nexport default function Navbar(props: any) {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"container\">\n                <a className=\"navbar-brand\" href=\"#\">兩好三壞，全台開團資訊（11月16日更新）</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <a className=\"nav-link\" href=\"#\">開團資訊 <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"http://equallove.tw\">關於婚姻平權大平台</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n}\n","import React, { Component, MouseEvent } from 'react';\n\nexport enum ButtonType {\n    primary,\n    secondary,\n}\n\nexport interface Props {\n    buttonText: string\n    type: ButtonType\n    onClick: any\n}\n\nclass Button extends Component<Props> {\n    render() {\n        const { buttonText, type } = this.props\n        var cn = \"btn\"\n        switch(type) {\n            case ButtonType.primary:\n                cn += \" btn--primary\"\n                break;\n            case ButtonType.secondary:\n                cn += \" btn--secondary\"\n                break;\n            default:\n            break;\n        }\n        return (\n            <button className={cn} onClick={ this.props.onClick }>\n                {buttonText}\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Component } from 'react';\n\nexport interface Props {\n    defaultTitle: string;\n    defaultValue: string;\n    title: string;\n    options: Array<String>;\n    onChange: any; //TODO: Specify type for onChange\n\n}\nexport default class Selector extends Component<Props> {\n    render() {\n        return (\n            <select onChange={this.props.onChange} value={this.props.title} className=\"custom-select\">\n                <option disabled>{this.props.defaultTitle}</option>\n                {this.props.options.map((option, index) => {\n                    return <option \n                        className=\"dropdown-item\" \n                        key={index+1}\n                    >{option}</option>\n                })}\n            </select>\n        );\n    }\n}","/// <reference types=\"@types/googlemaps\" />\n/* global google */\n\nimport React from 'react';\nimport Canvass from '../canvass';\n\n/**\n * A little bit hack way to turn google API loading into a promise.\n *\n * @returns {promise} once resolved, google API is loaded and ready to use.\n */\n// const gmapPromise = new Promise(resolve => {\n//   window.__initGoogleMap__ = () => {\n//     resolve();\n//   }\n// })\n\ninterface Props {\n  shifts: Array<Canvass>;\n}\n\nclass Map extends React.Component<Props> {\n  private rootEl: React.RefObject<HTMLDivElement>;\n  constructor(props: Props) {\n    super(props);\n    this.rootEl = React.createRef();\n  }\n\n  shouldComponentUpdate() {\n    // After componentDidMount, DOM is manipulated by Google Maps.\n    // Should never update.\n    return false;\n  }\n\n  componentDidMount() {\n    const map = new google.maps.Map(this.rootEl.current, {\n      center: {lat: 23.877295, lng: 121.030752},\n      zoom: 8,\n    });\n\n    this.props.shifts.forEach(({lat, lng, date, startTime, endTime, location}) => {\n      if(lat === undefined || lng === undefined) {\n        return;\n      }\n      const position: google.maps.LatLng = new google.maps.LatLng(lat, lng);\n      const marker = new google.maps.Marker({\n        position: position,\n        map,\n        title: `${date} ${startTime}-${endTime} - ${location}`\n      });\n\n      const infoWindow = new google.maps.InfoWindow({\n        content: `\n          <div>${date} ${startTime}-${endTime} - ${location}</div><script>alert(1)</script>\n        `\n      })\n\n      marker.addListener('click', () => {\n        infoWindow.open(map, marker);\n      })\n    })\n  }\n\n  render(){\n    return (<div className=\"map__root\" ref={this.rootEl} />)\n  }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\n\nexport interface Props {\n  options: Array<string>;\n  selected: string;\n  onChange: any;\n}\n\nconst Toggles: React.FunctionComponent<Props> = (props) => {\n    const displayOptions = props.options.map((opt: string, i: number) => {\n        const labelClasses = opt===props.selected ? \"toggle btn btn-secondary active\" : \"toggle btn btn-secondary\";\n        return (\n        <label \n          className={labelClasses} \n          key={i.toString()}\n          onClick={() => props.onChange(opt)}\n        >\n            <input \n              type=\"radio\" \n              name=\"options\" \n              key={i.toString()} \n            />\n            {opt}\n        </label>\n      );\n    });\n    return (\n      <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n        {displayOptions}\n      </div>\n    );\n};\n\nexport default Toggles;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Gallery from \"./components/Gallery\";\nimport Canvass, { Area, getAreas } from \"./canvass\";\nimport Navbar from \"./components/Navbar\";\nimport Selector from \"./components/Selector\";\nimport Button, { ButtonType } from \"./components/Button\";\nimport Map from './components/Map';\nimport G0vbar from \"g0v-banner\";\nimport Toggles from \"./components/Toggles\";\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\n\nimport distance from '@turf/distance';\nimport {point} from '@turf/helpers';\n\nexport interface Props {\n  shifts: Array<Canvass>;\n}\n\ntype MaybeMoment = moment.Moment | null;\n\nexport interface State {\n  area: string;\n  query: string;\n  view: string,\n  shifts: Array<Canvass>;\n  date: MaybeMoment;\n  lat?: number;\n  lng?: number;\n  orderByDistance: boolean;\n  loadingLocation: boolean;\n}\n\nfunction isInArea(a: Canvass): boolean {\n  return true;\n}\n\nclass App extends Component<Props, State> {\n  handleAreaChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const newArea = e.target.value;\n    this.setState({ area: newArea });\n  }\n  handleQueryUpdate = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({ query: e.target.value });\n  }\n  handleDateUpdate = (newDate: moment.Moment): void => {\n    this.setState({ date: newDate });\n  }\n  handleViewChange = (newView: string): void => {\n    this.setState({ view: newView });\n  }\n  isOnThisDate = (c: Canvass): boolean => {\n    if(this.state.date===null) return true;\n    moment.locale(\"zh-tw\");\n    const canvassDate = moment(c.date.substring(0, c.date.length-3), \"MM/DD\");\n    if(this.state.date.isSame(canvassDate, \"day\")) return true;\n    return false;\n  }\n  handleLocationRequest = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    this.setState({loadingLocation: true})\n    if(navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.applyCurrentLocation);\n    } else {\n      alert(\"此瀏覽器不支援定位搜尋\");\n      this.setState({loadingLocation: false});\n    }\n  }\n\n  applyCurrentLocation = (location:any) => {\n    this.state.shifts.sort(function(a: Canvass, b: Canvass){\n      var position = point([location.coords.latitude, location.coords.longitude]);\n      if (a.lat && a.lng) {\n        var aPos = point([a.lat, a.lng]);\n        a.distance = distance(position, aPos);\n      } else {\n        a.distance = 9999;\n      }\n      if (b.lat && b.lng) {\n        var bPos = point([b.lat, b.lng]);\n        b.distance = distance(position, bPos);\n      } else {\n        b.distance = 9999;\n      }\n      return a.distance! - b.distance!;\n    });\n    this.setState({ orderByDistance: true, loadingLocation: false });\n    // sort using distance\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      area: \"區域\",\n      query: '',\n      shifts: props.shifts,\n      view: '卡片列表',\n      date: null,\n      lat: undefined,\n      lng: undefined,\n      orderByDistance: false,\n      loadingLocation: false,\n    }\n  }\n  areaFilter = (c: Canvass): boolean => {\n    if(this.state.area === \"無\" || this.state.area === \"區域\") return true;\n    return c.containsQuery(this.state.area);\n  }\n  render() {\n    const { view, date, area, query, loadingLocation, lat, lng } = this.state;\n\n    const shifts: Array<Canvass> =\n      this.state.shifts\n        .filter(c => c.containsQuery(this.state.query))\n        .filter(this.areaFilter)\n        .filter(this.isOnThisDate);\n\n    return (\n      <div className=\"App\">\n        <G0vbar width=\"1137px\" />\n        <Navbar />\n        <div className=\"container\">\n          <div className=\"row filter-form\">\n            <Button \n              buttonText={loadingLocation ? \"定位中...\" : \"定位尋找附近開團\"} \n              type={ButtonType.primary} \n              onClick={this.handleLocationRequest} \n            />\n\n            <DatePicker\n              selected={date}\n              onChange={this.handleDateUpdate}\n              className=\"filter-form__date-picker\"\n              minDate={moment()}\n              maxDate={moment(\"2018-11-24\")}\n              showDisabledMonthNavigation\n              placeholderText=\"選擇日期\"\n            />\n            <Selector\n              defaultValue=\"區域\"\n              defaultTitle=\"區域\"\n              options={getAreas()}\n              onChange={this.handleAreaChange}\n              title={area}\n            />\n            <div className=\"search\">\n              <input\n                type=\"search\"\n                className=\"form-control\"\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                placeholder=\"搜尋\"\n                value={query}\n                onChange={this.handleQueryUpdate}\n              />\n            </div>\n            <Toggles \n              options={[\"地圖\", \"卡片列表\"]}\n              selected=\"卡片列表\"\n              onChange={this.handleViewChange}\n            />\n          </div>\n        </div>\n        {view === '卡片列表' && <Gallery shifts={shifts} lat={lat} lng={lng} />}\n        {\n          view === '地圖' &&\n          <Map\n            key={ /* recreate Map whenever these value change */ `${query}/${area}/${date}`}\n            shifts={shifts.filter(c => {return c.lat!== undefined && c.lng !== undefined})}\n          />\n        }\n        <footer className=\"footer\">\n          資料來源：\n          <a \n            rel=\"noopener noreferrer\" \n            target=\"_blank\" \n            href=\"https://docs.google.com/spreadsheets/d/131ImXHRXARx8j8t9esNCJhrLUfZQG347L1k3GsJ1m1Q/edit?ts=5bf0bd8f#gid=0\">\n            兩好三壞，全台開團資訊\n          </a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.scss';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// import G0vbar from 'g0v-banner';\n\nimport App from './App';\nimport Canvass from './canvass';\nimport * as serviceWorker from './serviceWorker';\nimport GetSheetDone from 'get-sheet-done';\n\nconst googleSheet: string = \"1i3Y4VTelUNFySPXMys6rLlN3wZlC9T_vLKR1X-9rnmY\";\nconst sheetNum: number = 2;\n\nGetSheetDone.labeledCols(googleSheet, sheetNum).then((sheet:any) => {\n    const rawData = sheet.data;\n    const shifts: Array<Canvass> = rawData.map((a: any) => { return new Canvass(a) });\n\n    ReactDOM.render(<App shifts={shifts} />, document.getElementById('root'));\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}