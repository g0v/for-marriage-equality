{"version":3,"sources":["Canvass.ts","components/Button.tsx","components/Action.tsx","components/KeyValue.tsx","components/Label.tsx","components/TextBlock.tsx","components/GalleryItem.tsx","components/Gallery.tsx","components/Map.tsx","components/Navbar.tsx","components/Selector.tsx","components/Toggles.tsx","App.tsx","index.tsx"],"names":["CanvassType","Area","getArea","a","taipeiKeelung","taoyuanHsinchuMiaoli","taichungChanghuaNantou","yunlinChiayiTainan","kaohsiungPingtung","yilanHualienTaitung","outlyingIslands","ButtonType","Canvass","rawItem","lat","long","Object","classCallCheck","this","latLong","經緯度","split","length","isNaN","Number","notes","備註","area","raw","none","findArea","區域","date","開團日期","name","團長名稱","contactInfo","團長聯絡方式","volunteersNeeded","希望志工人數","startTime","開始時間","endTime","結束時間","types","Array","push","indexOf","spreadFlyers","dialogue","labor","streetRoaming","stall","canvassTypes","開團形式","location","地點","flyers","預計發出文宣份數","line","Line","phone","電話","lng","t","typesString","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","type","value","getType","err","return","query","forQuery","JSON","stringify","getTypes","Button","_this$props","props","buttonText","cn","primary","secondary","react_default","createElement","className","onClick","Component","Action","link","contact","title","concat","lib_default","text","onCopy","alert","href","rel","target","KeyValue","k","v","Label","TextBlock","italic","GalleryItem","shift","labels","components_Label","key","hasShift","hasDistance","distance","toFixed","components_KeyValue","components_TextBlock","components_Action","Gallery","shifts","map","index","distanceTo","from","point","to","units","components_GalleryItem","Map","_this","possibleConstructorReturn","getPrototypeOf","call","rootEl","React","createRef","google","maps","current","center","zoom","forEach","_ref","position","LatLng","marker","Marker","infoWindow","InfoWindow","content","addListener","open","ref","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Selector","onChange","disabled","defaultTitle","options","option","Toggles","displayOptions","opt","i","activeClasses","labelClasses","selected","toString","App","handleAreaChange","e","newArea","setState","handleQueryUpdate","handleDateUpdate","newDate","handleViewChange","newView","view","handleLocationRequest","loadingLocation","navigator","geolocation","getCurrentPosition","applyCurrentLocation","state","sort","b","coords","latitude","longitude","aPos","bPos","orderByDistance","isOnThisDate","c","moment","locale","canvassDate","substring","isSame","areaFilter","containsQuery","_this2","_this$state","filter","build_default","width","components_Button","es","minDate","maxDate","showDisabledMonthNavigation","placeholderText","Selector_Selector","defaultValue","ids","getAreas","aria-describedby","placeholder","components_Toggles","components_Gallery","components_Map","GetSheetDone","labeledCols","then","sheet","data","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2402deef.chunk.js","sourcesContent":["export enum CanvassType {\n  spreadFlyers,\n  dialogue,\n  labor,\n  streetRoaming,\n  stall,\n  none,\n}\n\nfunction canvassTypes(raw: string): CanvassType[] {\n  const types = Array<CanvassType>();\n  if (raw === null) {\n    types.push(CanvassType.none);\n  } else {\n    if (raw.indexOf('發文宣') !== -1) types.push(CanvassType.spreadFlyers);\n    if (raw.indexOf('對話') !== -1) types.push(CanvassType.dialogue);\n    if (raw.indexOf('代工') !== -1) types.push(CanvassType.labor);\n    if (raw.indexOf('掃街') !== -1) types.push(CanvassType.streetRoaming);\n    if (raw.indexOf('擺攤') !== -1) types.push(CanvassType.stall);\n  }\n  return types;\n}\n\nexport enum Area {\n  taipeiKeelung = 1,\n  taoyuanHsinchuMiaoli,\n  taichungChanghuaNantou,\n  yunlinChiayiTainan,\n  kaohsiungPingtung,\n  yilanHualienTaitung,\n  outlyingIslands,\n  none,\n}\n\nexport function findArea(raw: string): Area {\n  if (raw === null) return Area.none;\n  switch (raw) {\n    case '北北基': return Area.taipeiKeelung;\n    case '桃竹苗': return Area.taoyuanHsinchuMiaoli;\n    case '中彰投': return Area.taichungChanghuaNantou;\n    case '雲嘉南': return Area.yunlinChiayiTainan;\n    case '高屏': return Area.kaohsiungPingtung;\n    case '宜花東': return Area.yilanHualienTaitung;\n    case '離島外海': return Area.outlyingIslands;\n    default: return Area.none;\n  }\n}\n\nexport function getArea(a: Area): string {\n  switch (a) {\n    case Area.taipeiKeelung: return '北北基';\n    case Area.taoyuanHsinchuMiaoli: return '桃竹苗';\n    case Area.taichungChanghuaNantou: return '中彰投';\n    case Area.yunlinChiayiTainan: return '雲嘉南';\n    case Area.kaohsiungPingtung: return '高屏';\n    case Area.yilanHualienTaitung: return '宜花東';\n    case Area.outlyingIslands: return '離島外海';\n    default: return '無';\n  }\n}\n\nexport function getAreas(): string[] {\n  const ids: Area[] = [];\n  for (const area in Area) {\n    if (Number(area)) {\n      ids.push(Number(area));\n    }\n  }\n  return ids.map(getArea);\n}\n\nexport default class Canvass {\n  public notes: string;\n  public area: Area;\n  public name: string;\n  public contactInfo: string;\n  public volunteersNeeded: number;\n  public startTime: string;\n  public endTime: string;\n  public date: string;\n  public types: CanvassType[];\n  public location: string;\n  public flyers: number;\n  public line: string;\n  public phone: string;\n  public lat?: number;\n  public lng?: number;\n  public distance?: number;\n\n  constructor(\n    rawItem: any,\n  ) {\n    let lat;\n    let long;\n    if ('經緯度' in rawItem) {\n      const latLong = rawItem.經緯度.split(', ');\n      if (latLong.length === 2) {\n        const areNumbers = !isNaN(Number(latLong[0])) && !isNaN(Number(latLong[1]));\n        if (areNumbers) {\n          lat = Number(latLong[0]);\n          long = Number(latLong[1]);\n        }\n      }\n    }\n    this.notes = rawItem.備註 ? rawItem.備註 : '';\n    this.area = findArea(rawItem.區域);\n    this.date = rawItem.開團日期;\n    this.name = rawItem.團長名稱;\n    this.contactInfo = rawItem.團長聯絡方式;\n    this.volunteersNeeded = rawItem.希望志工人數;\n    this.startTime = rawItem.開始時間;\n    this.endTime = rawItem.結束時間;\n    this.types = canvassTypes(rawItem.開團形式);\n    this.location = rawItem.地點;\n    this.flyers = rawItem.預計發出文宣份數;\n    this.line = rawItem.Line ? rawItem.Line : '';\n    this.phone = rawItem.電話 ? rawItem.電話 : '';\n    this.lat = lat;\n    this.lng = long;\n  }\n  public getType(t: CanvassType): string {\n    switch (t) {\n      case CanvassType.spreadFlyers: return '發文宣';\n      case CanvassType.dialogue: return '對話';\n      case CanvassType.labor: return '代工';\n      case CanvassType.streetRoaming: return '掃街';\n      case CanvassType.stall: return '擺攤';\n      default: return '無';\n    }\n  }\n  public getTypes(): string {\n    let typesString = '';\n    for (const type of this.types) {\n      typesString += this.getType(type);\n    }\n    return typesString;\n  }\n  public containsQuery(query: string): boolean {\n    return this.forQuery().indexOf(query) !== -1;\n  }\n  public forQuery(): string {\n    return JSON.stringify(this) + getArea(this.area) + this.getTypes();\n  }\n}\n","// tslint:disable-next-line:import-name\nimport React, { Component, MouseEvent } from 'react';\n\nexport enum ButtonType {\n  primary,\n  secondary,\n}\n\nexport interface IProps {\n  buttonText: string;\n  type: ButtonType;\n  onClick: any;\n}\n\nclass Button extends Component<IProps> {\n  public render() {\n    const { buttonText, type } = this.props;\n    let cn = 'btn';\n    switch (type) {\n      case ButtonType.primary:\n        cn += ' btn--primary';\n        break;\n      case ButtonType.secondary:\n        cn += ' btn--secondary';\n        break;\n      default:\n        break;\n    }\n    return (\n      <button className={cn} onClick={this.props.onClick}>\n        {buttonText}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","// tslint:disable-next-line:import-name\nimport React, { Component } from 'react';\n// tslint:disable-next-line:import-name\nimport CopyToClipboard from 'react-copy-to-clipboard';\n\nexport interface IProps {\n  type: string;\n  contact: string;\n}\n\nclass Action extends Component<IProps> {\n  public render() {\n    const { type, contact } = this.props;\n    let cn = 'btn';\n    let link;\n    let buttonText;\n    let title = '';\n\n    switch (type) {\n      case 'line':\n        cn += ' btn--line';\n        link = `line://ti/p/@${contact}`;\n        title = `${contact}`;\n        buttonText = 'Line';\n        break;\n      case 'phone':\n        cn += ' btn--phone';\n        buttonText = '打電話';\n        title = `${contact}`;\n        link = `tel://${contact}`;\n        break;\n      case 'location':\n        cn += ' btn--primary';\n        buttonText = '大略位置';\n        title = 'Google 地圖';\n        link = `https://www.google.com/maps/search/?api=1&query=${contact}`;\n      default:\n        break;\n    }\n    if (type === 'line') {\n      return (\n        <CopyToClipboard\n          text={`@${contact}`}\n          onCopy={() => alert(`已將 LineID @${contact} 複製。`)}\n        >\n          <button className={cn} title={title}>\n            {buttonText}\n          </button>\n        </CopyToClipboard>\n      );\n    }\n    return (\n      <a\n        className={cn}\n        title={title}\n        href={link}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        {buttonText}\n      </a>\n    );\n  }\n}\n\nexport default Action;\n","// tslint:disable-next-line:import-name\nimport React, { Component } from 'react';\n\nexport interface IProps {\n  k: string;\n  v: string;\n}\n\nclass KeyValue extends Component<IProps> {\n  public render() {\n    const { k, v } = this.props;\n    return (\n      <div className=\"stat\">\n        <label className=\"stat__label\">{k}</label>\n        <span className=\"stat__figure\">{v}</span>\n      </div>\n    );\n  }\n}\n\nexport default KeyValue;\n","// tslint:disable-next-line:import-name\nimport React, { Component } from 'react';\n\nexport interface IProps {\n  text: string;\n}\n\nclass Label extends Component<IProps> {\n  public render() {\n    const { text } = this.props;\n    let cn = 'label';\n    switch (text) {\n      case '發文宣':\n        cn += ' label--neutral';\n        break;\n      case '對話':\n        cn += ' label--prominent';\n        break;\n      case '代工':\n        cn += ' label--muted';\n        break;\n      case '掃街':\n        cn += ' label--chill';\n        break;\n      case '擺攤':\n        cn += ' label--warm';\n        break;\n\n      default:\n        cn += ' label--distance';\n        break;\n    }\n    return (\n      <div className={cn}>\n        {text}\n      </div>\n    );\n  }\n}\n\nexport default Label;\n","// tslint:disable-next-line:import-name\nimport React, { Component } from 'react';\n\nexport interface IProps {\n  text: string;\n  italic?: boolean;\n}\n\nclass TextBlock extends Component<IProps> {\n  public render() {\n    const { text } = this.props;\n\n    return (\n      <p className={`gallery__item__text-block grow + ${(this.props.italic ? ' italic' : '')}`}>\n        {text}\n      </p>\n    );\n  }\n}\n\nexport default TextBlock;\n","// tslint:disable-next-line:import-name\nimport { distance } from '@turf/distance';\n// tslint:disable-next-line:import-name\nimport React, { Component } from 'react';\nimport Canvass, { CanvassType } from '../Canvass';\nimport Action from './Action';\nimport KeyValue from './KeyValue';\nimport Label from './Label';\nimport TextBlock from './TextBlock';\n\nexport interface IProps {\n  shift: Canvass;\n  distance?: number;\n}\n\nclass GalleryItem extends Component<IProps> {\n  public render() {\n    const { shift } = this.props;\n    const labels = [];\n    for (const type of shift.types) {\n      labels.push(<Label key={type} text={shift.getType(type)} />);\n    }\n    const hasShift = shift.types.length > 0 && shift.types[0] !== CanvassType.none;\n    const hasDistance = shift.distance !== 9999;\n    return (\n      <div className=\"gallery__item\">\n        {(hasShift || hasDistance) &&\n          <div className=\"gallery__item__labels-container\">\n            {labels}\n            {shift.distance && shift.distance !== 9999 &&\n              <Label key={-1} text={`約距 ${shift.distance.toFixed(2)} 公里`} />\n            }\n          </div>\n        }\n        <h2 className=\"gallery__item__header\">\n          {shift.location}\n        </h2>\n        <h3 className=\"gallery__item__subheader\">\n          {`${shift.date} ${shift.startTime} ~ ${shift.endTime}`}\n        </h3>\n        <div className={`gallery__item__stats-container ${(shift.notes ? '' : ' grow')}`}>\n          {shift.volunteersNeeded !== null &&\n            <KeyValue k=\"希望志工人數\" v={`${shift.volunteersNeeded}`} />\n          }\n          {shift.flyers !== null &&\n            <KeyValue k=\"預計發出文宣份數\" v={`${shift.flyers}`} />\n          }\n        </div>\n        {shift.notes &&\n          <TextBlock text={shift.notes} />\n        }\n        <div className=\"gallery__item__contact-container\">\n          {shift.name &&\n            <KeyValue k=\"團長\" v={shift.name} />\n          }\n          {shift.contactInfo &&\n            <KeyValue k=\"聯絡方式\" v={shift.contactInfo} />\n          }\n          <div className=\"gallery__item__contact-container__actions-container\">\n            {shift.line !== '' &&\n              <Action contact={shift.line} type=\"line\" />\n            }\n            {shift.phone !== '' &&\n              <Action contact={shift.phone} type=\"phone\" />\n            }\n            {(shift.lat && shift.lng) &&\n              <Action contact={`${shift.lat},${shift.lng}`} type=\"location\" />\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GalleryItem;\n","/* tslint:disable-next-line */\nimport React, { Component } from 'react';\n\nimport Canvass from '../Canvass';\nimport GalleryItem from './GalleryItem';\n\nimport distance from '@turf/distance';\nimport { point } from '@turf/helpers';\n\nexport interface IProps {\n  shifts: Canvass[];\n  lat?: number;\n  lng?: number;\n}\n\nexport type Unit =\n  'miles' |\n  'nauticalmiles' |\n  'degrees' |\n  'radians' |\n  'inches' |\n  'yards' |\n  'meters' |\n  'metres' |\n  'kilometers' |\n  'kilometres' |\n  undefined;\n\nclass Gallery extends Component<IProps> {\n  public render() {\n    const { shifts, lat, lng } = this.props;\n\n    return (\n      <div className=\"gallery container\">\n        {shifts.map((shift, index) => {\n          let distanceTo;\n\n          if (shift.lat && shift.lng && lat && lng) {\n            const from = point([lat, lng]);\n            const to = point([shift.lat, shift.lng]);\n            const options = { units: 'kilometres' as Unit };\n\n            distanceTo = distance(from, to, options);\n          }\n\n          return <GalleryItem key={index} shift={shift} distance={distanceTo} />;\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Gallery;\n","/// <reference types=\"@types/googlemaps\" />\n/* global google */\n\n// tslint:disable-next-line:import-name\nimport React from 'react';\nimport Canvass from '../Canvass';\n\n/**\n * A little bit hack way to turn google API loading into a promise.\n *\n * @returns {promise} once resolved, google API is loaded and ready to use.\n */\n// const gmapPromise = new Promise(resolve => {\n//   window.__initGoogleMap__ = () => {\n//     resolve();\n//   }\n// })\n\ninterface IProps {\n  shifts: Canvass[];\n}\n\nclass Map extends React.Component<IProps> {\n  private rootEl: React.RefObject<HTMLDivElement>;\n  constructor(props: IProps) {\n    super(props);\n    this.rootEl = React.createRef();\n  }\n\n  public shouldComponentUpdate() {\n    // After componentDidMount, DOM is manipulated by Google Maps.\n    // Should never update.\n    return false;\n  }\n\n  public componentDidMount() {\n    const map = new google.maps.Map(this.rootEl.current, {\n      center: { lat: 23.877295, lng: 121.030752 },\n      zoom: 8,\n    });\n\n    this.props.shifts.forEach(({ lat, lng, date, startTime, endTime, location }) => {\n      if (lat === undefined || lng === undefined) {\n        return;\n      }\n      const position: google.maps.LatLng = new google.maps.LatLng(lat, lng);\n      const marker = new google.maps.Marker({\n        map,\n        position,\n        title: `${date} ${startTime}-${endTime} - ${location}`,\n      });\n\n      const infoWindow = new google.maps.InfoWindow({\n        content: `\n          <div>${date} ${startTime}-${endTime} - ${location}</div><script>alert(1)</script>\n        `,\n      });\n\n      marker.addListener('click', () => {\n        infoWindow.open(map, marker);\n      });\n    });\n  }\n\n  public render() {\n    return (<div className=\"map__root\" ref={this.rootEl} />);\n  }\n}\n\nexport default Map;\n","// tslint:disable-next-line:import-name\nimport React, { Component } from 'react';\n\n// tslint:disable-next-line:function-name\nexport default function Navbar(props: any) {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"container\">\n        <a className=\"navbar-brand\" href=\"#\">兩好三壞，全台開團資訊（11月16日更新）</a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#\">開團資訊 <span className=\"sr-only\">(current)</span></a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"http://equallove.tw\">關於婚姻平權大平台</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","// tslint:disable-next-line:import-name\nimport React, { Component } from 'react';\n\nexport interface IProps {\n  defaultTitle: string;\n  defaultValue: string;\n  title: string;\n  options: string[];\n  onChange: any; // TODO: Specify type for onChange\n\n}\nexport default class Selector extends Component<IProps> {\n  public render() {\n    return (\n      <select onChange={this.props.onChange} value={this.props.title} className=\"custom-select\">\n        <option disabled>{this.props.defaultTitle}</option>\n        {this.props.options.map((option, index) => {\n          return <option\n            className=\"dropdown-item\"\n            key={index + 1}\n          >{option}</option>;\n        })}\n      </select>\n    );\n  }\n}\n","// tslint:disable-next-line:import-name\nimport React, { Component } from 'react';\n\nexport interface IProps {\n  options: string[];\n  selected: string;\n  onChange: any;\n}\n\n// tslint:disable-next-line:variable-name\nconst Toggles: React.FunctionComponent<IProps> = (props) => {\n  const displayOptions = props.options.map((opt: string, i: number) => {\n    const inactiveClasses = 'toggle btn btn-secondary';\n    const activeClasses = `${inactiveClasses} active`;\n    const labelClasses = opt === props.selected ? activeClasses : inactiveClasses;\n    return (\n      <label\n        className={labelClasses}\n        key={i.toString()}\n        onClick={() => props.onChange(opt)}\n      >\n        <input\n          type=\"radio\"\n          name=\"options\"\n          key={i.toString()}\n        />\n        {opt}\n      </label>\n    );\n  });\n  return (\n    <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n      {displayOptions}\n    </div>\n  );\n};\n\nexport default Toggles;\n","// TSLint overrides because we like our component names to be capitalized.\n/* tslint:disable-next-line */\nimport G0vBanner from 'g0v-banner';\nimport moment from 'moment';\n/* tslint:disable-next-line */\nimport React, { Component } from 'react';\n/* tslint:disable-next-line */\nimport DatePicker from 'react-datepicker';\n\nimport './App.css';\nimport Canvass, { getAreas } from './Canvass';\nimport Button, { ButtonType } from './components/Button';\nimport Gallery from './components/Gallery';\nimport Map from './components/Map';\nimport Navbar from './components/Navbar';\nimport Selector from './components/Selector';\nimport Toggles from './components/Toggles';\n\nimport distance from '@turf/distance';\nimport { point } from '@turf/helpers';\n\nexport interface IProps {\n  shifts: Canvass[];\n}\n\ntype MaybeMoment = moment.Moment | null;\n\nexport interface IState {\n  area: string;\n  query: string;\n  view: string;\n  shifts: Canvass[];\n  date: MaybeMoment;\n  lat?: number;\n  lng?: number;\n  orderByDistance: boolean;\n  loadingLocation: boolean;\n}\n\nfunction isInArea(a: Canvass): boolean {\n  return true;\n}\n\nclass App extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      area: '區域',\n      date: null,\n      lat: undefined,\n      lng: undefined,\n      loadingLocation: false,\n      orderByDistance: false,\n      query: '',\n      shifts: props.shifts,\n      view: '卡片列表',\n    };\n  }\n  public handleAreaChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const newArea = e.target.value;\n    this.setState({ area: newArea });\n  }\n  public handleQueryUpdate = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({ query: e.target.value });\n  }\n  public handleDateUpdate = (newDate: moment.Moment): void => {\n    this.setState({ date: newDate });\n  }\n  public handleViewChange = (newView: string): void => {\n    this.setState({ view: newView });\n  }\n  public render() {\n    const { view, date, area, query, loadingLocation, lat, lng } = this.state;\n\n    const shifts: Canvass[] =\n      this.state.shifts\n        .filter(c => c.containsQuery(this.state.query))\n        .filter(this.areaFilter)\n        .filter(this.isOnThisDate);\n\n    return (\n      <div className=\"App\">\n        <G0vBanner width=\"1137px\" />\n        <Navbar />\n        <div className=\"container\">\n          <div className=\"row filter-form\">\n            <Button\n              buttonText={loadingLocation ? '定位中...' : '定位尋找附近開團'}\n              type={ButtonType.primary}\n              onClick={this.handleLocationRequest}\n            />\n\n            <DatePicker\n              selected={date}\n              onChange={this.handleDateUpdate}\n              className=\"filter-form__date-picker\"\n              minDate={moment()}\n              maxDate={moment('2018-11-24')}\n              showDisabledMonthNavigation\n              placeholderText=\"選擇日期\"\n            />\n            <Selector\n              defaultValue=\"區域\"\n              defaultTitle=\"區域\"\n              options={getAreas()}\n              onChange={this.handleAreaChange}\n              title={area}\n            />\n            <div className=\"search\">\n              <input\n                type=\"search\"\n                className=\"form-control\"\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                placeholder=\"搜尋\"\n                value={query}\n                onChange={this.handleQueryUpdate}\n              />\n            </div>\n            <Toggles\n              options={['地圖', '卡片列表']}\n              selected=\"卡片列表\"\n              onChange={this.handleViewChange}\n            />\n          </div>\n        </div>\n        {view === '卡片列表' && <Gallery shifts={shifts} lat={lat} lng={lng} />}\n        {\n          view === '地圖' &&\n          <Map\n            /* recreate Map whenever these key values change */\n            key={`${query}/${area}/${date}`}\n            shifts={shifts.filter(c => (c.lat !== undefined && c.lng !== undefined))}\n          />\n        }\n        <footer className=\"footer\">\n          資料來源：\n          <a\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            href={\n              'https://docs.google.com/spreadsheets/d/' +\n              '131ImXHRXARx8j8t9esNCJhrLUfZQG347L1k3GsJ1m1Q/' +\n              'edit?ts=5bf0bd8f#gid=0'\n            }\n          >\n            兩好三壞，全台開團資訊\n          </a>\n        </footer>\n      </div>\n    );\n  }\n  public handleLocationRequest = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    this.setState({ loadingLocation: true });\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.applyCurrentLocation);\n    } else {\n      alert('此瀏覽器不支援定位搜尋');\n      this.setState({ loadingLocation: false });\n    }\n  }\n\n  public applyCurrentLocation = (location: any) => {\n    this.state.shifts.sort((a: Canvass, b: Canvass) => {\n      const position = point([location.coords.latitude, location.coords.longitude]);\n      if (a.lat && a.lng) {\n        const aPos = point([a.lat, a.lng]);\n        a.distance = distance(position, aPos);\n      } else {\n        a.distance = 9999;\n      }\n      if (b.lat && b.lng) {\n        const bPos = point([b.lat, b.lng]);\n        b.distance = distance(position, bPos);\n      } else {\n        b.distance = 9999;\n      }\n      return a.distance! - b.distance!;\n    });\n    this.setState({ orderByDistance: true, loadingLocation: false });\n    // sort using distance\n  }\n  private isOnThisDate = (c: Canvass): boolean => {\n    if (this.state.date === null) return true;\n    moment.locale('zh-tw');\n    const canvassDate = moment(c.date.substring(0, c.date.length - 3), 'MM/DD');\n    if (this.state.date.isSame(canvassDate, 'day')) return true;\n    return false;\n  }\n  private areaFilter = (c: Canvass): boolean => {\n    if (this.state.area === '無' || this.state.area === '區域') return true;\n    return c.containsQuery(this.state.area);\n  }\n}\n\nexport default App;\n","// tslint:disable-next-line:import-name\nimport GetSheetDone from 'get-sheet-done';\n// tslint:disable-next-line:import-name\nimport React, { Component } from 'react';\n// tslint:disable-next-line:import-name\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './index.scss';\n\nimport App from './App';\nimport Canvass from './Canvass';\n\nconst googleSheet: string = '1i3Y4VTelUNFySPXMys6rLlN3wZlC9T_vLKR1X-9rnmY';\nconst sheetNum: number = 2;\n\nGetSheetDone.labeledCols(googleSheet, sheetNum).then((sheet: any) => {\n  const rawData = sheet.data;\n  const shifts: Canvass[] = rawData.map((a: any) => new Canvass(a));\n\n  ReactDOM.render(<App shifts={shifts} />, document.getElementById('root'));\n});\n"],"sourceRoot":""}